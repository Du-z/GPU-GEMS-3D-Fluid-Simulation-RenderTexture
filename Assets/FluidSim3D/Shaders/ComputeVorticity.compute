
#pragma kernel CSMain
#define NUM_THREADS 8

float4 _Size;

RWTexture3D<float3> _Write;
Texture3D<float3> _Velocity;

[numthreads(NUM_THREADS,NUM_THREADS,NUM_THREADS)]
void CSMain (int3 id : SV_DispatchThreadID)
{

    int3 idxL = int3(max(0, id.x-1), id.y, id.z);
    int3 idxR = int3(min(_Size.x-1, id.x+1), id.y, id.z);
    
    int3 idxB = int3(id.x, max(0, id.y-1), id.z);
    int3 idxT = int3(id.x, min(_Size.y-1, id.y+1), id.z);
    
    int3 idxD = int3(id.x, id.y, max(0, id.z-1));
    int3 idxU = int3(id.x, id.y, min(_Size.z-1, id.z+1));

	float3 L = _Velocity[ idxL ];
    float3 R = _Velocity[ idxR ];
    
    float3 B = _Velocity[ idxB ];
    float3 T = _Velocity[ idxT ];
    
    float3 D = _Velocity[ idxD ];
    float3 U = _Velocity[ idxU ];
    
    float3 vorticity = 0.5 * float3( (( T.z - B.z ) - ( U.y - D.y )) , (( U.x - D.x ) - ( R.z - L.z )) , (( R.y - L.y ) - ( T.x - B.x )) );
	
    _Write[id] = vorticity;
}
